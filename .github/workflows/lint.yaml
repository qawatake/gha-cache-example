on:
  push:
    branches:
      - main
  pull_request:
name: lint
permissions:
  contents: read
  actions: write # require to delete cache
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: false
      # https://golangci-lint.run/usage/configuration/#cache
      - run: echo "GOLANGCI_LINT_CACHE=${HOME}/.cache/golangci-lint" >> $GITHUB_ENV
      - run: echo $GOLANGCI_LINT_CACHE
      - id: cache-path
        run: |
          echo "mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
          echo "build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "golangci-lint=$(go env GOLANGCI_LINT_CACHE)" >> $GITHUB_OUTPUT
      - uses: actions/cache/restore@v3
        id: cache-restore-mod
        with:
          path: ${{ steps.cache-path.outputs.mod }}
          key: ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-mod-
      - uses: actions/cache/restore@v3
        id: cache-restore-build
        with:
          path: ${{ steps.cache-path.outputs.build }}
          key: ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-build
      - uses: actions/cache/restore@v3
        id: cache-restore-golangci-lint
        with:
          path: ${{ steps.cache-path.outputs.build }}
          key: ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-build
      - name: Lint
        run: make lint
      - uses: actions/cache/save@v3
        if: always() && github.ref == 'refs/heads/main' && steps.cache-restore-mod.outputs.cache-hit != 'true'
        with:
          key: ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-mod-${{ hashFiles('**/go.sum') }}
          path: ${{ steps.cache-path.outputs.mod }}
      # delete cache for build
      - name: Delete Previous Cache
        if: always() && github.ref == 'refs/heads/main' && steps.cache-restore-build.outputs.cache-hit == 'true'
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ steps.cache-restore-build.outputs.cache-primary-key }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache/save@v3
        if: always() && github.ref == 'refs/heads/main'
        with:
          key: ${{ github.workflow}}-${{ github.job }}-${{ runner.os }}-build
          path: ${{ steps.cache-path.outputs.build }}
